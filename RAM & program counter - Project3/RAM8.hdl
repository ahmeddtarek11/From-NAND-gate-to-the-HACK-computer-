
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    DMux8Way(in=load, sel=address, a=outputA, b=outputB, c=outputC, d=outputD, e=outputE, f=outputF, g=outputG, h=outputH);    
    Register(in=in, load=outputA, out=reg1);
    Register(in=in, load=outputB, out=reg2);
    Register(in=in, load=outputC, out=reg3);
    Register(in=in, load=outputD, out=reg4);

    Register(in=in, load=outputE, out=reg5);
    Register(in=in, load=outputF, out=reg6);
    Register(in=in, load=outputG, out=reg7);
    Register(in=in, load=outputH, out=reg8);

Mux8Way16(a=reg1, b=reg2, c=reg3, d=reg4, e=reg5, f=reg6, g=reg7, h=reg8, sel=address, out=out);










}
